digraph UML_Created { 
rankdir=BT;
splines=ortho;
graphvizcreator_GVDependencyDrawer  [
shape="record",
label= "{graphvizcreator_GVDependencyDrawer|- java_util_Map\<java_lang_String, java_lang_String\> : arrowTypes\l- java_util_Map\<java_lang_String, java_lang_String\> : arrowHeads\l|+ \<init\>(umlentities_IUMLEntity, void) : void\l- addsupportedArrows(void) : void\l+ draw(java_lang_String) : java_lang_String\l}" 
];
graphvizcreator_GVDependencyDrawer -> umlentities_IUMLEntity [arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_GVDependencyDrawer -> umlentities_IUMLDependency [arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_GVDependencyDrawer -> umlentities_AbstractDrawer [arrowhead="onormal", style="solid", dir="forward" ]; 

graphvizcreator_GVDrawerFactory  [
shape="record",
label= "{graphvizcreator_GVDrawerFactory|+ \<init\>(void) : void\l+ populate(void) : void\l}" 
];
graphvizcreator_GVDrawerFactory -> umlentities_AbstractDrawerFactory [arrowhead="onormal", style="solid", dir="forward" ]; 

graphvizcreator_GVFieldDrawer  [
shape="record",
label= "{graphvizcreator_GVFieldDrawer|+ \<init\>(umlentities_IUMLEntity, void) : void\l+ draw(java_lang_String) : java_lang_String\l}" 
];
graphvizcreator_GVFieldDrawer -> umlentities_IUMLEntity [arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_GVFieldDrawer -> umlentities_UMLField [arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_GVFieldDrawer -> umlentities_AbstractDrawer [arrowhead="onormal", style="solid", dir="forward" ]; 

graphvizcreator_GVMethodDrawer  [
shape="record",
label= "{graphvizcreator_GVMethodDrawer|+ \<init\>(umlentities_IUMLEntity, void) : void\l+ draw(java_lang_String) : java_lang_String\l}" 
];
graphvizcreator_GVMethodDrawer -> umlentities_IUMLEntity [arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_GVMethodDrawer -> umlentities_UMLMethod [arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_GVMethodDrawer -> umlentities_AbstractDrawer [arrowhead="onormal", style="solid", dir="forward" ]; 

patternparser_AbstractPatternDetector  [
shape="record",
label= "{\<\<Abstract\>\>\npatternparser_AbstractPatternDetector|- java_util_List\<umlentities_IUMLNode\> : nodes\l- java_util_List\<umlentities_IUMLNode\> : patterns\l|+ \<init\>(void) : void\l+ getPatterns(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l+ setNodes(java_util_List\<umlentities_IUMLNode\>, void) : void\l+ getNodes(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l+ addPatterns(java_util_List\<umlentities_IUMLNode\>, void) : void\l+ getAllNodes(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l}" 
];
patternparser_AbstractPatternDetector -> umlentities_IUMLNode [arrowhead="vee", style="solid", headlabel="1__n", dir="forward"]; 
patternparser_AbstractPatternDetector -> patternparser_IPatternDetector [arrowhead="onormal", style="dashed", dir="forward" ]; 

patternparser_AbstractPatternNode  [
shape="record",
label= "{\<\<Abstract\>\>\npatternparser_AbstractPatternNode|- java_lang_String : patternName\l- umlentities_IUMLNode : decorated\l|+ \<init\>(umlentities_IUMLNode, void) : void\l+ \<init\>(void) : void\l+ getClassName(java_lang_String) : java_lang_String\l+ getMethods(java_util_List\<umlentities_UMLMethod\>) : java_util_List\<umlentities_UMLMethod\>\l+ getFields(java_util_List\<umlentities_UMLField\>) : java_util_List\<umlentities_UMLField\>\l+ addDependency(umlentities_IUMLDependency, void) : void\l+ removeDependency(umlentities_IUMLDependency, void) : void\l+ addMethod(umlentities_UMLMethod, void) : void\l+ addField(umlentities_UMLField, void) : void\l+ removeMehtod(java_lang_String, void) : void\l+ removeField(java_lang_String, void) : void\l+ getProtectionLevel(java_lang_String) : java_lang_String\l+ getDependencies(java_util_List\<umlentities_IUMLDependency\>) : java_util_List\<umlentities_IUMLDependency\>\l+ getPatternName(java_lang_String) : java_lang_String\l+ getUnderlyingNode(umlentities_IUMLNode) : umlentities_IUMLNode\l+ getClassType(java_lang_String) : java_lang_String\l}" 
];
patternparser_AbstractPatternNode -> umlentities_IUMLNode [arrowhead="vee", style="solid", dir="forward" ]; 
patternparser_AbstractPatternNode -> umlentities_UMLField [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
patternparser_AbstractPatternNode -> umlentities_UMLMethod [arrowhead="vee", style="dashed", dir="forward" ]; 
patternparser_AbstractPatternNode -> umlentities_IUMLDependency [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
patternparser_AbstractPatternNode -> umlentities_IUMLNode [arrowhead="onormal", style="dashed", dir="forward" ]; 
patternparser_AbstractPatternNode -> umlentities_UMLEntity [arrowhead="onormal", style="solid", dir="forward" ]; 

patternparser_BadInheritanceDependencyPattern  [
shape="record",
label= "{patternparser_BadInheritanceDependencyPattern|+ java_lang_String : TYPE\l+ java_lang_String : depColor\l|+ \<init\>(umlentities_IUMLDependency, void) : void\l+ \<init\>(void) : void\l+ getColor(java_lang_String) : java_lang_String\l+ getType(java_lang_String) : java_lang_String\l}" 
];
patternparser_BadInheritanceDependencyPattern -> umlentities_IUMLDependency [arrowhead="vee", style="dashed", dir="forward" ]; 
patternparser_BadInheritanceDependencyPattern -> patternparser_UMLDependencyDecorator [arrowhead="onormal", style="solid", dir="forward" ]; 

patternparser_BadInheritancePattern  [
shape="record",
label= "{patternparser_BadInheritancePattern|+ java_lang_String : TYPE\l- java_lang_String : classColor\l|+ \<init\>(umlentities_IUMLNode, void) : void\l+ \<init\>(void) : void\l+ getClassColor(java_lang_String) : java_lang_String\l+ getType(java_lang_String) : java_lang_String\l}" 
];
patternparser_BadInheritancePattern -> umlentities_IUMLNode [arrowhead="vee", style="dashed", dir="forward" ]; 
patternparser_BadInheritancePattern -> patternparser_AbstractPatternNode [arrowhead="onormal", style="solid", dir="forward" ]; 

patternparser_IPatternDetector  [
shape="record",
label= "{\<\<Interface\>\>\npatternparser_IPatternDetector|+ getPatterns(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l+ setNodes(java_util_List\<umlentities_IUMLNode\>, void) : void\l+ detectPattern(void) : void\l+ getAllNodes(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l+ getNodes(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l+ addPatterns(java_util_List\<umlentities_IUMLNode\>, void) : void\l}" 
];
patternparser_IPatternDetector -> umlentities_IUMLNode [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 

patternparser_PatternParser  [
shape="record",
label= "{patternparser_PatternParser|- java_util_List\<umlentities_IUMLNode\> : nodes\l- java_util_List\<umlentities_IUMLNode\> : patterns\l- java_util_List\<patternparser_IPatternDetector\> : detectors\l|+ \<init\>(java_util_List\<umlentities_IUMLNode\>, java_util_List\<patternparser_IPatternDetector\>, void) : void\l+ detectPatterns(void) : void\l+ getOriginalNodes(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l+ getUpdatedlNodes(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l+ getCurrentDetectors(java_util_List\<patternparser_IPatternDetector\>) : java_util_List\<patternparser_IPatternDetector\>\l+ setUmlNodes(java_util_List\<umlentities_IUMLNode\>, void) : void\l+ addDetector(patternparser_IPatternDetector, void) : void\l+ removDetector(patternparser_IPatternDetector, void) : void\l}" 
];
patternparser_PatternParser -> umlentities_IUMLNode [arrowhead="vee", style="solid", headlabel="1__n", dir="forward"]; 
patternparser_PatternParser -> patternparser_IPatternDetector [arrowhead="vee", style="solid", headlabel="1__n", dir="forward"]; 

patternparser_PatternParserPhase  [
shape="record",
label= "{patternparser_PatternParserPhase|- projectRunner_ProjectModel : pm\l- patternparser_PatternParser : parser\l|+ \<init\>(void) : void\l+ runPhase(projectRunner_ProjectModel, void) : void\l+ getResults(projectRunner_ProjectModel) : projectRunner_ProjectModel\l}" 
];
patternparser_PatternParserPhase -> patternparser_PatternParser [arrowhead="vee", style="solid", dir="forward" ]; 
patternparser_PatternParserPhase -> projectRunner_Configuration [arrowhead="vee", style="dashed", dir="forward" ]; 
patternparser_PatternParserPhase -> umlentities_IUMLNode [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
patternparser_PatternParserPhase -> patternparser_IPatternDetector [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
patternparser_PatternParserPhase -> projectRunner_Phase [arrowhead="onormal", style="dashed", dir="forward" ]; 

patternparser_SingletonPattern  [
shape="record",
label= "{patternparser_SingletonPattern|+ java_lang_String : TYPE\l- java_lang_String : borderColor\l- java_lang_String : ClassTag\l|+ \<init\>(umlentities_IUMLNode, void) : void\l+ \<init\>(void) : void\l+ getTag(java_lang_String) : java_lang_String\l+ getBorderColor(java_lang_String) : java_lang_String\l+ getType(java_lang_String) : java_lang_String\l}" 
];
patternparser_SingletonPattern -> umlentities_IUMLNode [arrowhead="vee", style="dashed", dir="forward" ]; 
patternparser_SingletonPattern -> patternparser_AbstractPatternNode [arrowhead="onormal", style="solid", dir="forward" ]; 

patternparser_UMLDependencyDecorator  [
shape="record",
label= "{\<\<Abstract\>\>\npatternparser_UMLDependencyDecorator|- umlentities_IUMLDependency : decorated\l|+ \<init\>(umlentities_IUMLDependency, void) : void\l+ \<init\>(void) : void\l+ getTo(java_lang_String) : java_lang_String\l+ getFrom(java_lang_String) : java_lang_String\l+ getIsCollection(boolean) : boolean\l+ getIsBiDirectional(boolean) : boolean\l+ setIsBiDirectional(boolean, void) : void\l+ setIsCollection(boolean, void) : void\l+ getUnderlying(umlentities_IUMLDependency) : umlentities_IUMLDependency\l+ getDependencyType(java_lang_String) : java_lang_String\l}" 
];
patternparser_UMLDependencyDecorator -> umlentities_IUMLDependency [arrowhead="vee", style="solid", dir="forward" ]; 
patternparser_UMLDependencyDecorator -> umlentities_IUMLDependency [arrowhead="onormal", style="dashed", dir="forward" ]; 
patternparser_UMLDependencyDecorator -> umlentities_UMLEntity [arrowhead="onormal", style="solid", dir="forward" ]; 

projectparser_ProjectParser  [
shape="record",
label= "{projectparser_ProjectParser|- java_util_List\<java_lang_String\> : classNames\l- java_util_List\<org_objectweb_asm_tree_ClassNode\> : classNodes\l|+ \<init\>(java_util_List\<java_lang_String\>, void) : void\l+ parseClasses(void) : void\l+ getClassNodes(java_util_List\<org_objectweb_asm_tree_ClassNode\>) : java_util_List\<org_objectweb_asm_tree_ClassNode\>\l+ getClassNames(java_util_List\<java_lang_String\>) : java_util_List\<java_lang_String\>\l+ addClassName(java_lang_String, void) : void\l+ removeClassName(java_lang_String, void) : void\l}" 
];
projectparser_ProjectParser -> projectparser_IProjectParser [arrowhead="onormal", style="dashed", dir="forward" ]; 

projectRunner_Phase  [
shape="record",
label= "{\<\<Interface\>\>\nprojectRunner_Phase|+ runPhase(projectRunner_ProjectModel, void) : void\l+ getResults(projectRunner_ProjectModel) : projectRunner_ProjectModel\l}" 
];

projectRunner_ProgramRunner  [
shape="record",
label= "{projectRunner_ProgramRunner|- java_util_List\<projectRunner_Phase\> : phases\l- java_lang_String : fileName\l- java_lang_String : defaultFileName\l- projectRunner_ProjectModel : projectModel\l- java_util_Map\<java_lang_String, java_lang_Object\> : settings\l|+ \<init\>(void) : void\l+ \<init\>(java_lang_String, void) : void\l+ loadProgram(void) : void\l- loadSettingsFile(void) : void\l+ executeProgram(projectRunner_ProjectModel) : projectRunner_ProjectModel\l+ setSettingsFile(java_lang_String, void) : void\l}" 
];
projectRunner_ProgramRunner -> projectRunner_Phase [arrowhead="vee", style="solid", headlabel="1__n", dir="forward"]; 

umlentities_AbstractDrawer  [
shape="record",
label= "{\<\<Abstract\>\>\numlentities_AbstractDrawer|- umlentities_IUMLEntity : entity\l|+ \<init\>(umlentities_IUMLEntity, void) : void\l+ \<init\>(void) : void\l+ getEntity(umlentities_IUMLEntity) : umlentities_IUMLEntity\l+ setEntity(umlentities_IUMLEntity, void) : void\l}" 
];
umlentities_AbstractDrawer -> umlentities_IUMLEntity [arrowhead="vee", style="solid", dir="forward" ]; 
umlentities_AbstractDrawer -> umlentities_IDrawer [arrowhead="onormal", style="dashed", dir="forward" ]; 

umlentities_AbstractDrawerFactory  [
shape="record",
label= "{\<\<Abstract\>\>\numlentities_AbstractDrawerFactory|- java_util_Map\<java_lang_String, java_lang_Class,  : entityDrawers\l|+ \<init\>(void) : void\l+ createDrawer(umlentities_IUMLEntity, umlentities_IDrawer) : umlentities_IDrawer\l+ addDrawer(java_lang_String, java_lang_Class\<null\>, void) : void\l+ populate(void) : void\l}" 
];
umlentities_AbstractDrawerFactory -> patternparser_AbstractPatternNode [arrowhead="vee", style="dashed", dir="forward" ]; 
umlentities_AbstractDrawerFactory -> patternparser_UMLDependencyDecorator [arrowhead="vee", style="dashed", dir="forward" ]; 
umlentities_AbstractDrawerFactory -> umlentities_IUMLEntity [arrowhead="vee", style="dashed", dir="forward" ]; 
umlentities_AbstractDrawerFactory -> umlentities_IDrawer [arrowhead="vee", style="dashed", dir="forward" ]; 
umlentities_AbstractDrawerFactory -> umlentities_IDrawerFactory [arrowhead="onormal", style="dashed", dir="forward" ]; 

umlentities_ClassInheritanceDependency  [
shape="record",
label= "{umlentities_ClassInheritanceDependency|+ java_lang_String : CLASS_TYPE\l+ java_lang_String : TYPE\l|+ \<init\>(java_lang_String, java_lang_String, boolean, void) : void\l+ getDependencyType(java_lang_String) : java_lang_String\l+ getType(java_lang_String) : java_lang_String\l}" 
];
umlentities_ClassInheritanceDependency -> umlentities_UMLDependency [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentities_CreatesDependency  [
shape="record",
label= "{umlentities_CreatesDependency|+ java_lang_String : CLASS_TYPE\l+ java_lang_String : TYPE\l|+ \<init\>(java_lang_String, java_lang_String, boolean, void) : void\l+ getDependencyType(java_lang_String) : java_lang_String\l+ getType(java_lang_String) : java_lang_String\l}" 
];
umlentities_CreatesDependency -> umlentities_UMLDependency [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentities_HasADependency  [
shape="record",
label= "{umlentities_HasADependency|+ java_lang_String : CLASS_TYPE\l+ java_lang_String : TYPE\l|+ \<init\>(java_lang_String, java_lang_String, boolean, void) : void\l+ getDependencyType(java_lang_String) : java_lang_String\l+ getType(java_lang_String) : java_lang_String\l}" 
];
umlentities_HasADependency -> umlentities_UMLDependency [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentities_IDrawerFactory  [
shape="record",
label= "{\<\<Interface\>\>\numlentities_IDrawerFactory|+ createDrawer(umlentities_IUMLEntity, umlentities_IDrawer) : umlentities_IDrawer\l+ addDrawer(java_lang_String, java_lang_Class\<null\>, void) : void\l}" 
];
umlentities_IDrawerFactory -> umlentities_IUMLEntity [arrowhead="vee", style="dashed", dir="forward" ]; 
umlentities_IDrawerFactory -> umlentities_IDrawer [arrowhead="vee", style="dashed", dir="forward" ]; 

umlentities_InterfaceImplementDependency  [
shape="record",
label= "{umlentities_InterfaceImplementDependency|+ java_lang_String : CLASS_TYPE\l+ java_lang_String : TYPE\l|+ \<init\>(java_lang_String, java_lang_String, boolean, void) : void\l+ getDependencyType(java_lang_String) : java_lang_String\l+ getType(java_lang_String) : java_lang_String\l}" 
];
umlentities_InterfaceImplementDependency -> umlentities_UMLDependency [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentities_IUMLDependency  [
shape="record",
label= "{\<\<Interface\>\>\numlentities_IUMLDependency|+ getTo(java_lang_String) : java_lang_String\l+ getFrom(java_lang_String) : java_lang_String\l+ getIsCollection(boolean) : boolean\l+ getIsBiDirectional(boolean) : boolean\l+ setIsBiDirectional(boolean, void) : void\l+ setIsCollection(boolean, void) : void\l+ getDependencyType(java_lang_String) : java_lang_String\l}" 
];
umlentities_IUMLDependency -> umlentities_IUMLEntity [arrowhead="onormal", style="dashed", dir="forward" ]; 

umlentities_IUMLEntity  [
shape="record",
label= "{\<\<Interface\>\>\numlentities_IUMLEntity|+ draw(java_lang_String) : java_lang_String\l+ setDrawer(umlentities_IDrawer, void) : void\l+ getType(java_lang_String) : java_lang_String\l}" 
];
umlentities_IUMLEntity -> umlentities_IDrawer [arrowhead="vee", style="dashed", dir="both" ]; 

umlentities_IUMLNode  [
shape="record",
label= "{\<\<Interface\>\>\numlentities_IUMLNode|+ getDependencies(java_util_List\<umlentities_IUMLDependency\>) : java_util_List\<umlentities_IUMLDependency\>\l+ getClassName(java_lang_String) : java_lang_String\l+ getMethods(java_util_List\<umlentities_UMLMethod\>) : java_util_List\<umlentities_UMLMethod\>\l+ getFields(java_util_List\<umlentities_UMLField\>) : java_util_List\<umlentities_UMLField\>\l+ addDependency(umlentities_IUMLDependency, void) : void\l+ removeDependency(umlentities_IUMLDependency, void) : void\l+ addMethod(umlentities_UMLMethod, void) : void\l+ addField(umlentities_UMLField, void) : void\l+ removeMehtod(java_lang_String, void) : void\l+ removeField(java_lang_String, void) : void\l+ getProtectionLevel(java_lang_String) : java_lang_String\l+ getClassType(java_lang_String) : java_lang_String\l}" 
];
umlentities_IUMLNode -> umlentities_IUMLDependency [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentities_IUMLNode -> umlentities_UMLMethod [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentities_IUMLNode -> umlentities_UMLField [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentities_IUMLNode -> umlentities_IUMLEntity [arrowhead="onormal", style="dashed", dir="forward" ]; 

umlentities_MethodRetArgDependency  [
shape="record",
label= "{umlentities_MethodRetArgDependency|+ java_lang_String : TYPE\l+ java_lang_String : CLASS_TYPE\l|+ \<init\>(java_lang_String, java_lang_String, boolean, void) : void\l+ getType(java_lang_String) : java_lang_String\l+ getDependencyType(java_lang_String) : java_lang_String\l}" 
];
umlentities_MethodRetArgDependency -> umlentities_UMLDependency [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentities_UMLAbstractClass  [
shape="record",
label= "{umlentities_UMLAbstractClass|+ java_lang_String : TYPE\l+ java_lang_String : CLASS_TYPE\l|+ \<init\>(java_util_List\<umlentities_IUMLDependency\>, java_util_List\<umlentities_UMLMethod\>, java_util_List\<umlentities_UMLField\>, java_lang_String, java_lang_String, void) : void\l+ getType(java_lang_String) : java_lang_String\l+ getClassType(java_lang_String) : java_lang_String\l}" 
];
umlentities_UMLAbstractClass -> umlentities_IUMLDependency [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentities_UMLAbstractClass -> umlentities_UMLMethod [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentities_UMLAbstractClass -> umlentities_UMLField [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentities_UMLAbstractClass -> umlentities_UMLNode [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentities_UMLClass  [
shape="record",
label= "{umlentities_UMLClass|+ java_lang_String : TYPE\l+ java_lang_String : CLASS_TYPE\l|+ \<init\>(java_util_List\<umlentities_IUMLDependency\>, java_util_List\<umlentities_UMLMethod\>, java_util_List\<umlentities_UMLField\>, java_lang_String, java_lang_String, void) : void\l+ getType(java_lang_String) : java_lang_String\l+ getClassType(java_lang_String) : java_lang_String\l}" 
];
umlentities_UMLClass -> umlentities_IUMLDependency [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentities_UMLClass -> umlentities_UMLMethod [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentities_UMLClass -> umlentities_UMLField [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentities_UMLClass -> umlentities_UMLNode [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentities_UMLDependency  [
shape="record",
label= "{\<\<Abstract\>\>\numlentities_UMLDependency|- java_lang_String : classTo\l- java_lang_String : classFrom\l- java_lang_String : type\l- boolean : isCollection\l- boolean : isBiDirectional\l|+ \<init\>(java_lang_String, java_lang_String, boolean, void) : void\l+ getTo(java_lang_String) : java_lang_String\l+ getFrom(java_lang_String) : java_lang_String\l+ getIsCollection(boolean) : boolean\l+ getIsBiDirectional(boolean) : boolean\l+ setIsBiDirectional(boolean, void) : void\l+ setIsCollection(boolean, void) : void\l+ equals(java_lang_Object, boolean) : boolean\l}" 
];
umlentities_UMLDependency -> umlentities_IUMLDependency [arrowhead="onormal", style="dashed", dir="forward" ]; 
umlentities_UMLDependency -> umlentities_UMLEntity [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentities_UMLEntity  [
shape="record",
label= "{\<\<Abstract\>\>\numlentities_UMLEntity|- umlentities_IDrawer : drawer\l|+ \<init\>(void) : void\l+ \<init\>(umlentities_IDrawer, void) : void\l+ draw(java_lang_String) : java_lang_String\l+ setDrawer(umlentities_IDrawer, void) : void\l}" 
];
umlentities_UMLEntity -> umlentities_IDrawer [arrowhead="vee", style="solid", dir="forward" ]; 
umlentities_UMLEntity -> umlentities_IUMLEntity [arrowhead="onormal", style="dashed", dir="forward" ]; 

umlentities_UMLField  [
shape="record",
label= "{umlentities_UMLField|+ java_lang_String : TYPE\l- java_util_List\<java_lang_String\> : modifiers\l- java_lang_String : varName\l- java_lang_String : type\l- java_lang_String : protectionLevel\l|+ \<init\>(java_lang_String, java_lang_String, java_util_List\<java_lang_String\>, java_lang_String, void) : void\l+ getModifiers(java_util_List\<java_lang_String\>) : java_util_List\<java_lang_String\>\l+ getVarName(java_lang_String) : java_lang_String\l+ getFieldType(java_lang_String) : java_lang_String\l+ getProtectionLevel(java_lang_String) : java_lang_String\l+ getType(java_lang_String) : java_lang_String\l}" 
];
umlentities_UMLField -> umlentities_UMLEntity [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentities_UMLInterface  [
shape="record",
label= "{umlentities_UMLInterface|+ java_lang_String : TYPE\l+ java_lang_String : CLASS_TYPE\l|+ \<init\>(java_util_List\<umlentities_IUMLDependency\>, java_util_List\<umlentities_UMLMethod\>, java_util_List\<umlentities_UMLField\>, java_lang_String, java_lang_String, void) : void\l+ getType(java_lang_String) : java_lang_String\l+ getClassType(java_lang_String) : java_lang_String\l}" 
];
umlentities_UMLInterface -> umlentities_IUMLDependency [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentities_UMLInterface -> umlentities_UMLMethod [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentities_UMLInterface -> umlentities_UMLField [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentities_UMLInterface -> umlentities_UMLNode [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentities_UMLMethod  [
shape="record",
label= "{umlentities_UMLMethod|+ java_lang_String : TYPE\l- java_lang_String : protectionLevel\l- java_lang_String : name\l- java_util_List\<java_lang_String\> : arguments\l- java_util_List\<java_lang_String\> : modifiers\l- java_lang_String : returnType\l|+ \<init\>(java_lang_String, java_lang_String, java_util_List\<java_lang_String\>, java_util_List\<java_lang_String\>, java_lang_String, void) : void\l+ getName(java_lang_String) : java_lang_String\l+ getArguments(java_util_List\<java_lang_String\>) : java_util_List\<java_lang_String\>\l+ addArguments(java_lang_String, void) : void\l+ removeArguments(java_lang_String, void) : void\l+ getModifier(java_util_List\<java_lang_String\>) : java_util_List\<java_lang_String\>\l+ getReturnType(java_lang_String) : java_lang_String\l+ getProtectionLevel(java_lang_String) : java_lang_String\l+ getType(java_lang_String) : java_lang_String\l}" 
];
umlentities_UMLMethod -> umlentities_UMLEntity [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentities_UMLNode  [
shape="record",
label= "{\<\<Abstract\>\>\numlentities_UMLNode|- java_util_List\<umlentities_IUMLDependency\> : dependencies\l- java_util_List\<umlentities_UMLMethod\> : methods\l- java_util_List\<umlentities_UMLField\> : fields\l- java_lang_String : protectionLevel\l- java_lang_String : className\l|+ \<init\>(java_util_List\<umlentities_IUMLDependency\>, java_util_List\<umlentities_UMLMethod\>, java_util_List\<umlentities_UMLField\>, java_lang_String, java_lang_String, void) : void\l+ getDependencies(java_util_List\<umlentities_IUMLDependency\>) : java_util_List\<umlentities_IUMLDependency\>\l+ getClassName(java_lang_String) : java_lang_String\l+ getMethods(java_util_List\<umlentities_UMLMethod\>) : java_util_List\<umlentities_UMLMethod\>\l+ getFields(java_util_List\<umlentities_UMLField\>) : java_util_List\<umlentities_UMLField\>\l+ addDependency(umlentities_IUMLDependency, void) : void\l+ removeDependency(umlentities_IUMLDependency, void) : void\l+ addMethod(umlentities_UMLMethod, void) : void\l+ addField(umlentities_UMLField, void) : void\l+ removeMehtod(java_lang_String, void) : void\l+ removeField(java_lang_String, void) : void\l+ getProtectionLevel(java_lang_String) : java_lang_String\l}" 
];
umlentities_UMLNode -> umlentities_IUMLDependency [arrowhead="vee", style="solid", headlabel="1__n", dir="forward"]; 
umlentities_UMLNode -> umlentities_UMLMethod [arrowhead="vee", style="solid", headlabel="1__n", dir="forward"]; 
umlentities_UMLNode -> umlentities_UMLField [arrowhead="vee", style="solid", headlabel="1__n", dir="forward"]; 
umlentities_UMLNode -> umlentities_IUMLNode [arrowhead="onormal", style="dashed", dir="forward" ]; 
umlentities_UMLNode -> umlentities_UMLEntity [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentityparser_IEntityParser  [
shape="record",
label= "{\<\<Interface\>\>\numlentityparser_IEntityParser|+ getArg(java_lang_String) : java_lang_String\l+ validProtectionLevel(java_lang_String, boolean) : boolean\l+ parseClasses(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l+ getNodes(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l+ setClasses(java_util_List\<org_objectweb_asm_tree_ClassNode\>, void) : void\l+ parseClass(org_objectweb_asm_tree_ClassNode, umlentities_IUMLNode) : umlentities_IUMLNode\l+ parseMethod(org_objectweb_asm_tree_MethodNode, umlentities_UMLMethod) : umlentities_UMLMethod\l+ parseField(org_objectweb_asm_tree_FieldNode, umlentities_UMLField) : umlentities_UMLField\l+ getClassNodes(java_util_List\<org_objectweb_asm_tree_ClassNode\>) : java_util_List\<org_objectweb_asm_tree_ClassNode\>\l}" 
];
umlentityparser_IEntityParser -> umlentities_IUMLNode [arrowhead="vee", style="dashed", headlabel="1__n", dir="forward"]; 
umlentityparser_IEntityParser -> umlentities_UMLMethod [arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_IEntityParser -> umlentities_UMLField [arrowhead="vee", style="dashed", dir="forward" ]; 

umlentityparser_PrivateParser  [
shape="record",
label= "{umlentityparser_PrivateParser|+ java_lang_String : ARG\l|+ \<init\>(void) : void\l+ getArg(java_lang_String) : java_lang_String\l+ validProtectionLevel(java_lang_String, boolean) : boolean\l}" 
];
umlentityparser_PrivateParser -> umlentityparser_AbstractEntityParser [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentityparser_ProtectedParser  [
shape="record",
label= "{umlentityparser_ProtectedParser|+ java_lang_String : ARG\l|+ \<init\>(void) : void\l+ getArg(java_lang_String) : java_lang_String\l+ validProtectionLevel(java_lang_String, boolean) : boolean\l}" 
];
umlentityparser_ProtectedParser -> umlentityparser_AbstractEntityParser [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentityparser_PublicParser  [
shape="record",
label= "{umlentityparser_PublicParser|+ java_lang_String : ARG\l|+ \<init\>(void) : void\l+ getArg(java_lang_String) : java_lang_String\l+ validProtectionLevel(java_lang_String, boolean) : boolean\l}" 
];
umlentityparser_PublicParser -> umlentityparser_AbstractEntityParser [arrowhead="onormal", style="solid", dir="forward" ]; 

umlentityparser_UMLEntityParserPhase  [
shape="record",
label= "{umlentityparser_UMLEntityParserPhase|- java_util_List\<org_objectweb_asm_tree_ClassNode\> : classNodes\l- java_util_List\<umlentities_IUMLNode\> : umlNodes\l- java_util_List\<java_lang_String\> : commandLineArgs\l- projectRunner_ProjectModel : projectModel\l|+ \<init\>(void) : void\l+ runPhase(projectRunner_ProjectModel, void) : void\l+ getResults(projectRunner_ProjectModel) : projectRunner_ProjectModel\l}" 
];
umlentityparser_UMLEntityParserPhase -> umlentities_IUMLNode [arrowhead="vee", style="solid", headlabel="1__n", dir="forward"]; 
umlentityparser_UMLEntityParserPhase -> projectRunner_Configuration [arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_UMLEntityParserPhase -> umlentityparser_UMLEntityParser [arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_UMLEntityParserPhase -> projectRunner_Phase [arrowhead="onormal", style="dashed", dir="forward" ]; 

projectRunner_Configuration   [ color="blue" fillcolor=white
shape="record",
label=  "{projectRunner_Configuration \n\<Singleton\>|- projectRunner_Configuration : instance\l- java_lang_String : protectLevel\l- java_util_List\<java_lang_String\> : whiteList\l- java_util_List\<java_lang_String\> : blackList\l- boolean : isRecursive\l- java_util_List\<java_lang_String\> : detectors\l- java_util_Map\<java_lang_String, java_lang_String\> : patternsToDrawers\l- boolean : SyntheicMethodsOn\l- java_lang_String : fileCreator\l|+ static \<clinit\>(void) : void\l- \<init\>(void) : void\l+ final static getInstance(projectRunner_Configuration) : projectRunner_Configuration\l+ getProtectLevel(java_lang_String) : java_lang_String\l+ getWhiteList(java_util_List\<java_lang_String\>) : java_util_List\<java_lang_String\>\l+ getBlackList(java_util_List\<java_lang_String\>) : java_util_List\<java_lang_String\>\l+ isRecursive(boolean) : boolean\l+ getDetectors(java_util_List\<java_lang_String\>) : java_util_List\<java_lang_String\>\l+ getPatternsToDrawers(java_util_Map\<java_lang_String, java_lang_String\>) : java_util_Map\<java_lang_String, java_lang_String\>\l+ isSyntheicMethodsOn(boolean) : boolean\l+ setProtectLevel(java_lang_String, void) : void\l+ setWhiteList(java_util_List\<java_lang_String\>, void) : void\l+ setBlackList(java_util_List\<java_lang_String\>, void) : void\l+ setRecursive(boolean, void) : void\l+ setDetectors(java_util_List\<java_lang_String\>, void) : void\l+ setPatternsToDrawers(java_util_Map\<java_lang_String, java_lang_String\>, void) : void\l+ setSyntheicMethodsOn(boolean, void) : void\l+ setFileCreator(java_lang_String, void) : void\l+ getFileCreator(java_lang_String) : java_lang_String\l}" 
];
projectRunner_Configuration -> projectRunner_Configuration  [ arrowhead="vee", style="solid", dir="forward" ]; 

umlentities_IDrawer   [ style="filled", fillcolor="green", color="black", 
shape="record",
label=  "{\<\<Interface\>\>\numlentities_IDrawer \n\<decorated\>|+ draw(java_lang_String) : java_lang_String\l+ getEntity(umlentities_IUMLEntity) : umlentities_IUMLEntity\l+ setEntity(umlentities_IUMLEntity, void) : void\l}" 
];

graphvizcreator_AbstractPatternDrawer   [ style="filled", fillcolor="green", color="black", 
shape="record",
label=  "{\<\<Abstract\>\>\ngraphvizcreator_AbstractPatternDrawer \n\<decorator\>|- umlentities_IDrawer : decorated\l- umlentities_IUMLEntity : patternNode\l|+ \<init\>(umlentities_IDrawer, umlentities_IUMLEntity, void) : void\l+ \<init\>(void) : void\l+ setDecorated(umlentities_IDrawer, void) : void\l+ getEntity(umlentities_IUMLEntity) : umlentities_IUMLEntity\l+ draw(java_lang_String) : java_lang_String\l+ setEntity(umlentities_IUMLEntity, void) : void\l}" 
];
graphvizcreator_AbstractPatternDrawer -> umlentities_IUMLEntity  [ arrowhead="vee", style="solid", dir="forward" ]; 
graphvizcreator_AbstractPatternDrawer -> umlentities_IDrawer  [ arrowhead="onormal", style="dashed", dir="forward" ]; 
graphvizcreator_AbstractPatternDrawer -> umlentities_IDrawer   [  xlabel= "<decorated>", arrowhead="vee", style="solid", dir="forward" ]; 

graphvizcreator_BadInheritanceDependencyDrawer   [ style="filled", fillcolor="green", color="black", 
shape="record",
label=  "{graphvizcreator_BadInheritanceDependencyDrawer \n\<decorator\>|+ \<init\>(umlentities_IDrawer, umlentities_IUMLEntity, void) : void\l+ draw(java_lang_String) : java_lang_String\l}" 
];
graphvizcreator_BadInheritanceDependencyDrawer -> umlentities_IDrawer  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_BadInheritanceDependencyDrawer -> umlentities_IUMLEntity  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_BadInheritanceDependencyDrawer -> patternparser_BadInheritanceDependencyPattern  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_BadInheritanceDependencyDrawer -> graphvizcreator_AbstractPatternDrawer  [ arrowhead="onormal", style="solid", dir="forward" ]; 

graphvizcreator_BadInheritanceDrawer   [ style="filled", fillcolor="green", color="black", 
shape="record",
label=  "{graphvizcreator_BadInheritanceDrawer \n\<decorator\>|+ \<init\>(umlentities_IDrawer, umlentities_IUMLEntity, void) : void\l+ draw(java_lang_String) : java_lang_String\l}" 
];
graphvizcreator_BadInheritanceDrawer -> umlentities_IDrawer  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_BadInheritanceDrawer -> umlentities_IUMLEntity  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_BadInheritanceDrawer -> patternparser_BadInheritancePattern  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_BadInheritanceDrawer -> graphvizcreator_AbstractPatternDrawer  [ arrowhead="onormal", style="solid", dir="forward" ]; 

graphvizcreator_SingletonDrawer   [ style="filled", fillcolor="green", color="black", 
shape="record",
label=  "{graphvizcreator_SingletonDrawer \n\<decorator\>|+ \<init\>(umlentities_IDrawer, umlentities_IUMLEntity, void) : void\l+ draw(java_lang_String) : java_lang_String\l}" 
];
graphvizcreator_SingletonDrawer -> umlentities_IDrawer  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_SingletonDrawer -> umlentities_IUMLEntity  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_SingletonDrawer -> patternparser_SingletonPattern  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_SingletonDrawer -> graphvizcreator_AbstractPatternDrawer  [ arrowhead="onormal", style="solid", dir="forward" ]; 

projectparser_IProjectParser   [ style="filled", fillcolor="green", color="black", 
shape="record",
label=  "{\<\<Interface\>\>\nprojectparser_IProjectParser \n\<decorated\>|+ parseClasses(void) : void\l+ getClassNodes(java_util_List\<org_objectweb_asm_tree_ClassNode\>) : java_util_List\<org_objectweb_asm_tree_ClassNode\>\l+ getClassNames(java_util_List\<java_lang_String\>) : java_util_List\<java_lang_String\>\l+ addClassName(java_lang_String, void) : void\l+ removeClassName(java_lang_String, void) : void\l}" 
];

projectparser_ProjectParserDecorator   [ style="filled", fillcolor="green", color="black", 
shape="record",
label=  "{\<\<Abstract\>\>\nprojectparser_ProjectParserDecorator \n\<decorator\>|- projectparser_IProjectParser : underlying\l|+ \<init\>(projectparser_IProjectParser, void) : void\l+ parseClasses(void) : void\l+ getClassNodes(java_util_List\<org_objectweb_asm_tree_ClassNode\>) : java_util_List\<org_objectweb_asm_tree_ClassNode\>\l+ getClassNames(java_util_List\<java_lang_String\>) : java_util_List\<java_lang_String\>\l+ addClassName(java_lang_String, void) : void\l+ removeClassName(java_lang_String, void) : void\l}" 
];
projectparser_ProjectParserDecorator -> projectparser_IProjectParser  [ arrowhead="onormal", style="dashed", dir="forward" ]; 
projectparser_ProjectParserDecorator -> projectparser_IProjectParser   [  xlabel= "<decorated>", arrowhead="vee", style="solid", dir="forward" ]; 

projectparser_RecursiveProjectParser   [ style="filled", fillcolor="green", color="black", 
shape="record",
label=  "{projectparser_RecursiveProjectParser \n\<decorator\>|- java_util_List\<java_lang_String\> : blackList\l|+ \<init\>(projectparser_IProjectParser, java_util_List\<java_lang_String\>, void) : void\l+ parseClasses(void) : void\l}" 
];
projectparser_RecursiveProjectParser -> projectparser_IProjectParser  [ arrowhead="vee", style="dashed", dir="forward" ]; 
projectparser_RecursiveProjectParser -> projectparser_ProjectParserDecorator  [ arrowhead="onormal", style="solid", dir="forward" ]; 

graphvizcreator_GraphVizCreator   [ style="filled", fillcolor="cyan", color="black", 
shape="record",
label=  "{graphvizcreator_GraphVizCreator \n\<LawOfDemeterViolation\>|- java_io_File : file\l- java_util_List\<umlentities_IUMLNode\> : entities\l- umlentities_IDrawerFactory : fact\l|+ \<init\>(java_util_List\<umlentities_IUMLNode\>, void) : void\l+ \<init\>(void) : void\l+ setEntities(java_util_List\<umlentities_IUMLNode\>, void) : void\l+ setRenderers(void) : void\l+ createFile(void) : void\l+ getFile(java_io_File) : java_io_File\l+ addRenderer(java_lang_String, java_lang_Class\<null\>, void) : void\l}" 
];
graphvizcreator_GraphVizCreator -> umlentities_IDrawerFactory  [ arrowhead="vee", style="solid", dir="forward" ]; 
graphvizcreator_GraphVizCreator -> umlentities_IUMLEntity  [ arrowhead="vee", style="dashed", headlabel= "1__n", dir="forward"]; 
graphvizcreator_GraphVizCreator -> umlentities_IDrawer  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_GraphVizCreator -> graphvizcreator_GVDrawerFactory   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_GraphVizCreator -> umlentities_IUMLNode   [  color=cyan, arrowhead="vee", style="solid", headlabel= "1__n", dir="forward"]; 

graphvizcreator_GVClassNodeDrawer   [ style="filled", fillcolor="cyan", color="black", 
shape="record",
label=  "{graphvizcreator_GVClassNodeDrawer \n\<LawOfDemeterViolation\>|+ \<init\>(umlentities_IUMLEntity, void) : void\l+ draw(java_lang_String) : java_lang_String\l}" 
];
graphvizcreator_GVClassNodeDrawer -> umlentities_IUMLEntity  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_GVClassNodeDrawer -> umlentities_IUMLNode  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_GVClassNodeDrawer -> umlentities_AbstractDrawer  [ arrowhead="onormal", style="solid", dir="forward" ]; 
graphvizcreator_GVClassNodeDrawer -> umlentities_UMLField   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_GVClassNodeDrawer -> umlentities_UMLMethod   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_GVClassNodeDrawer -> umlentities_IUMLDependency   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 

graphvizcreator_RenderPhase   [ style="filled", fillcolor="cyan", color="black", 
shape="record",
label=  "{graphvizcreator_RenderPhase \n\<LawOfDemeterViolation\>|- java_io_File : file\l- projectRunner_ProjectModel : pm\l|+ \<init\>(void) : void\l+ runPhase(projectRunner_ProjectModel, void) : void\l+ getResults(projectRunner_ProjectModel) : projectRunner_ProjectModel\l}" 
];
graphvizcreator_RenderPhase -> projectRunner_Configuration  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_RenderPhase -> umlentities_IUMLEntity  [ arrowhead="vee", style="dashed", dir="forward" ]; 
graphvizcreator_RenderPhase -> projectRunner_Phase  [ arrowhead="onormal", style="dashed", dir="forward" ]; 
graphvizcreator_RenderPhase -> graphvizcreator_GraphVizCreator   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 

patternparser_CompositionVSInheritanceDetector   [ style="filled", fillcolor="cyan", color="black", 
shape="record",
label=  "{patternparser_CompositionVSInheritanceDetector \n\<LawOfDemeterViolation\>|+ \<init\>(void) : void\l+ detectPattern(void) : void\l}" 
];
patternparser_CompositionVSInheritanceDetector -> umlentities_IUMLNode  [ arrowhead="vee", style="dashed", headlabel= "1__n", dir="forward"]; 
patternparser_CompositionVSInheritanceDetector -> umlentities_IUMLDependency  [ arrowhead="vee", style="dashed", headlabel= "1__n", dir="forward"]; 
patternparser_CompositionVSInheritanceDetector -> umlentities_UMLMethod  [ arrowhead="vee", style="dashed", headlabel= "1__n", dir="forward"]; 
patternparser_CompositionVSInheritanceDetector -> patternparser_AbstractPatternDetector  [ arrowhead="onormal", style="solid", dir="forward" ]; 
patternparser_CompositionVSInheritanceDetector -> patternparser_BadInheritancePattern   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
patternparser_CompositionVSInheritanceDetector -> patternparser_BadInheritanceDependencyPattern   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 

patternparser_SingletonDetector   [ style="filled", fillcolor="cyan", color="black", 
shape="record",
label=  "{patternparser_SingletonDetector \n\<LawOfDemeterViolation\>|+ \<init\>(void) : void\l+ detectPattern(void) : void\l}" 
];
patternparser_SingletonDetector -> umlentities_IUMLNode  [ arrowhead="vee", style="dashed", headlabel= "1__n", dir="forward"]; 
patternparser_SingletonDetector -> umlentities_IUMLDependency  [ arrowhead="vee", style="dashed", headlabel= "1__n", dir="forward"]; 
patternparser_SingletonDetector -> umlentities_UMLMethod  [ arrowhead="vee", style="dashed", headlabel= "1__n", dir="forward"]; 
patternparser_SingletonDetector -> patternparser_AbstractPatternDetector  [ arrowhead="onormal", style="solid", dir="forward" ]; 
patternparser_SingletonDetector -> patternparser_SingletonPattern   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 

projectparser_ProjectParserPhase   [ style="filled", fillcolor="cyan", color="black", 
shape="record",
label=  "{projectparser_ProjectParserPhase \n\<LawOfDemeterViolation\>|- projectRunner_ProjectModel : pm\l- projectparser_IProjectParser : parser\l|+ \<init\>(void) : void\l+ runPhase(projectRunner_ProjectModel, void) : void\l+ getResults(projectRunner_ProjectModel) : projectRunner_ProjectModel\l}" 
];
projectparser_ProjectParserPhase -> projectparser_IProjectParser  [ arrowhead="vee", style="solid", dir="forward" ]; 
projectparser_ProjectParserPhase -> projectRunner_Configuration  [ arrowhead="vee", style="dashed", dir="forward" ]; 
projectparser_ProjectParserPhase -> projectRunner_Phase  [ arrowhead="onormal", style="dashed", dir="forward" ]; 
projectparser_ProjectParserPhase -> projectparser_RecursiveProjectParser   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 

umlentityparser_AbstractEntityParser   [ style="filled", fillcolor="cyan", color="black", 
shape="record",
label=  "{\<\<Abstract\>\>\numlentityparser_AbstractEntityParser \n\<LawOfDemeterViolation\>|- java_util_List\<umlentities_IUMLNode\> : umlNodes\l- java_util_List\<org_objectweb_asm_tree_ClassNode\> : classNodes\l- java_util_List\<java_lang_String\> : classNames\l|+ \<init\>(void) : void\l+ \<init\>(java_util_List\<org_objectweb_asm_tree_ClassNode\>, void) : void\l+ setClasses(java_util_List\<org_objectweb_asm_tree_ClassNode\>, void) : void\l+ getNodes(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l+ getClassNodes(java_util_List\<org_objectweb_asm_tree_ClassNode\>) : java_util_List\<org_objectweb_asm_tree_ClassNode\>\l+ parseClasses(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l+ parseClass(org_objectweb_asm_tree_ClassNode, umlentities_IUMLNode) : umlentities_IUMLNode\l+ parseField(org_objectweb_asm_tree_FieldNode, umlentities_UMLField) : umlentities_UMLField\l+ parseMethod(org_objectweb_asm_tree_MethodNode, umlentities_UMLMethod) : umlentities_UMLMethod\l+ parseMethodDependencies(umlentities_UMLMethod, java_lang_String, java_util_List\<umlentities_IUMLDependency\>) : java_util_List\<umlentities_IUMLDependency\>\l+ parseFieldDependency(umlentities_UMLField, java_lang_String, java_util_List\<umlentities_IUMLDependency\>) : java_util_List\<umlentities_IUMLDependency\>\l+ parseInstructions(org_objectweb_asm_tree_MethodNode, java_lang_String, java_util_List\<umlentities_IUMLDependency\>) : java_util_List\<umlentities_IUMLDependency\>\l+ optimizeDependencies(java_util_List\<umlentities_IUMLDependency\>, java_util_List\<umlentities_IUMLDependency\>) : java_util_List\<umlentities_IUMLDependency\>\l+ removeNonParsedDependencies(java_util_List\<umlentities_IUMLDependency\>, java_util_List\<java_lang_String\>, java_util_List\<umlentities_IUMLDependency\>) : java_util_List\<umlentities_IUMLDependency\>\l+ createBiDirectionalDependencies(java_util_List\<umlentities_IUMLDependency\>, java_util_List\<umlentities_IUMLDependency\>) : java_util_List\<umlentities_IUMLDependency\>\l+ removeLowerClassifiedDependencies(java_util_List\<umlentities_IUMLDependency\>, java_util_List\<umlentities_IUMLDependency\>) : java_util_List\<umlentities_IUMLDependency\>\l+ higherClassification(umlentities_IUMLDependency, umlentities_IUMLDependency, int) : int\l+ removeDuplicateDependencies(java_util_List\<umlentities_IUMLDependency\>, java_util_List\<umlentities_IUMLDependency\>) : java_util_List\<umlentities_IUMLDependency\>\l+ getFieldType(java_lang_String, java_lang_String) : java_lang_String\l+ getMethodReturnType(java_lang_String, java_lang_String) : java_lang_String\l+ getMethodParameterTypes(java_lang_String, java_util_List\<java_lang_String\>) : java_util_List\<java_lang_String\>\l}" 
];
umlentityparser_AbstractEntityParser -> umlentities_IUMLNode  [ arrowhead="vee", style="solid", headlabel= "1__n", dir="forward"]; 
umlentityparser_AbstractEntityParser -> umlentities_IUMLDependency  [ arrowhead="vee", style="dashed", headlabel= "1__n", dir="forward"]; 
umlentityparser_AbstractEntityParser -> umlentityparser_IEntityParser  [ arrowhead="onormal", style="dashed", dir="forward" ]; 
umlentityparser_AbstractEntityParser -> umlentities_InterfaceImplementDependency   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_AbstractEntityParser -> umlentities_ClassInheritanceDependency   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_AbstractEntityParser -> umlentities_UMLInterface   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_AbstractEntityParser -> umlentities_UMLAbstractClass   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_AbstractEntityParser -> umlentities_UMLClass   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_AbstractEntityParser -> umlentities_UMLField   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_AbstractEntityParser -> umlentities_UMLMethod   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_AbstractEntityParser -> umlentities_MethodRetArgDependency   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_AbstractEntityParser -> umlentities_HasADependency   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_AbstractEntityParser -> umlentities_CreatesDependency   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 

umlentityparser_UMLEntityParser   [ style="filled", fillcolor="cyan", color="black", 
shape="record",
label=  "{umlentityparser_UMLEntityParser \n\<LawOfDemeterViolation\>|- java_util_List\<org_objectweb_asm_tree_ClassNode\> : classNodes\l- java_util_List\<umlentities_IUMLNode\> : entities\l- java_util_List\<java_lang_String\> : commandLineArgs\l- java_util_Map\<java_lang_String, umlentityparser_IEntityParser\> : classParsers\l|+ \<init\>(java_util_List\<org_objectweb_asm_tree_ClassNode\>, java_util_List\<java_lang_String\>, void) : void\l- supportParsers(void) : void\l+ getClassNodes(java_util_List\<org_objectweb_asm_tree_ClassNode\>) : java_util_List\<org_objectweb_asm_tree_ClassNode\>\l+ getEntities(java_util_List\<umlentities_IUMLNode\>) : java_util_List\<umlentities_IUMLNode\>\l+ getCommandLineArgs(java_util_List\<java_lang_String\>) : java_util_List\<java_lang_String\>\l+ getSupportedEntityParsers(java_util_Map\<java_lang_String, umlentityparser_IEntityParser\>) : java_util_Map\<java_lang_String, umlentityparser_IEntityParser\>\l+ setClassNodes(java_util_List\<org_objectweb_asm_tree_ClassNode\>, void) : void\l+ addNewEntityParser(umlentityparser_IEntityParser, void) : void\l+ removeEntityParser(umlentityparser_IEntityParser, void) : void\l+ addClassNode(org_objectweb_asm_tree_ClassNode, void) : void\l+ removeClassNode(org_objectweb_asm_tree_ClassNode, void) : void\l+ parseNodes(void) : void\l}" 
];
umlentityparser_UMLEntityParser -> umlentities_IUMLNode  [ arrowhead="vee", style="solid", headlabel= "1__n", dir="forward"]; 
umlentityparser_UMLEntityParser -> umlentityparser_IEntityParser  [ arrowhead="vee", style="solid", headlabel= "1__n", dir="forward"]; 
umlentityparser_UMLEntityParser -> umlentityparser_PublicParser   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_UMLEntityParser -> umlentityparser_ProtectedParser   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 
umlentityparser_UMLEntityParser -> umlentityparser_PrivateParser   [  color=cyan, arrowhead="vee", style="dashed", dir="forward" ]; 

}